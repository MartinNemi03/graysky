diff --git a/dist/style-sheet/color-scheme.js b/dist/style-sheet/color-scheme.js
index c08e40b8a577c01a97d18b2b0fea6ce2aafb3b63..05055257e08d1bce14a60c17ef5d4119f731c600 100644
--- a/dist/style-sheet/color-scheme.js
+++ b/dist/style-sheet/color-scheme.js
@@ -7,6 +7,16 @@ class ColorSchemeStore {
         this.colorSchemeListeners = new Set();
         this.colorScheme = react_native_1.Appearance.getColorScheme() || "light";
         this.colorSchemeSystem = "system";
+        react_native_1.Appearance.addChangeListener(({ colorScheme }) => {
+            if (this.colorSchemeSystem === "system") {
+                const oldColorScheme = this.colorScheme;
+                this.colorScheme = colorScheme || "light";
+                if (oldColorScheme !== this.colorScheme) {
+                    this.notifyMedia(["colorScheme"]);
+                    this.notifyColorScheme();
+                }
+            }
+        });
         this.subscribeColorScheme = (listener) => {
             this.colorSchemeListeners.add(listener);
             return () => this.colorSchemeListeners.delete(listener);
diff --git a/dist/style-sheet/index.d.ts b/dist/style-sheet/index.d.ts
index 72d8ec99250f691027d60a2b20813f327f49dca5..6a217891c604d206f978794b7be17b3ef73d5ebe 100644
--- a/dist/style-sheet/index.d.ts
+++ b/dist/style-sheet/index.d.ts
@@ -16,6 +16,7 @@ export declare const NativeWindStyleSheet: {
         native?: "native" | "css" | undefined;
         default?: "native" | "css" | undefined;
     }) => void;
+    getColorScheme: () => import("./color-scheme").ColorSchemeName;
     setColorScheme: (colorSchemeSystem: import("./color-scheme").ColorSchemeSystem) => void;
     platformSelect: {
         <T>(specifics: ({
diff --git a/dist/style-sheet/index.js b/dist/style-sheet/index.js
index 1990a7a881d44783d6a1b7dbfea23eb789b04fc7..7a2d46a4e12f7ffd2678ecb9c90aa05e47d07921 100644
--- a/dist/style-sheet/index.js
+++ b/dist/style-sheet/index.js
@@ -12,6 +12,7 @@ exports.NativeWindStyleSheet = {
     setAppearance: runtime.setAppearance.bind(runtime),
     setPlatform: runtime.setPlatform.bind(runtime),
     setOutput: runtime.setOutput.bind(runtime),
+    getColorScheme: runtime.getColorScheme.bind(runtime),
     setColorScheme: runtime.setColorScheme.bind(runtime),
     platformSelect: runtime.platformSelect.bind(runtime),
     platformColor: runtime.platformColor.bind(runtime),
diff --git a/dist/use-color-scheme.d.ts b/dist/use-color-scheme.d.ts
index d7f7cab8b7f906a3c0a476a60efddeee6c947bd5..19f7eba60b45df6b7ee069db5f77018d8d1691fa 100644
--- a/dist/use-color-scheme.d.ts
+++ b/dist/use-color-scheme.d.ts
@@ -1,5 +1,6 @@
 export declare function useColorScheme(): {
     colorScheme: import("./style-sheet/color-scheme").ColorSchemeName;
+    getColorScheme: () => import("./style-sheet/color-scheme").ColorSchemeName;
     setColorScheme: (colorSchemeSystem: import("./style-sheet/color-scheme").ColorSchemeSystem) => void;
     toggleColorScheme: () => void;
 };
diff --git a/dist/use-color-scheme.js b/dist/use-color-scheme.js
index a64178bae2a8f6ec78117c6bce66cdc67d54c480..b2fb438414ff642e6c149bef235d43d3cd07effb 100644
--- a/dist/use-color-scheme.js
+++ b/dist/use-color-scheme.js
@@ -9,6 +9,7 @@ function useColorScheme() {
     const colorScheme = (0, shim_1.useSyncExternalStore)(store.subscribeColorScheme, store.getColorScheme);
     return {
         colorScheme,
+        getColorScheme: store.getColorScheme,
         setColorScheme: store.setColorScheme,
         toggleColorScheme: store.toggleColorScheme,
     };